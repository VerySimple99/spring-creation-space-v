spring.application.name=spring17-web-thymeleaf-inst
# 기본 포트 : 필요시 변경 
server.port=8080
# ==============================================================================
# 타임리프 (Thymeleaf) 설정
# ==============================================================================
# 타임리프 템플릿 캐시 활성화 여부를 설정합니다.
# 개발 중에는 'false'로 설정하여 템플릿 파일을 수정할 때마다 서버를 재시작하지 않고
# 즉시 변경사항을 확인할 수 있도록 합니다. (매우 중요!)
# 운영 환경에서는 성능 향상을 위해 반드시 'true'로 설정해야 합니다.
spring.thymeleaf.cache=false

# ==============================================================================
# 개발 도구 (Spring Boot DevTools) 설정
# ==============================================================================
# spring-boot-devtools 의존성을 추가했을 때 사용할 수 있는 개발 편의 기능입니다.
# 개발 생산성을 크게 향상시켜 줍니다.

# 파일 변경 시 애플리케이션 자동 재시작 기능을 활성화합니다.
# Java 소스 코드, 설정 파일 등이 변경될 때 유용합니다.
spring.devtools.restart.enabled=true

# 자동 재시작에서 제외할 경로를 지정합니다.
# 일반적으로 정적 리소스나 템플릿 파일은 재시작 대상에서 제외하여
# 불필요한 재시작을 줄입니다. (Thymeleaf 캐시 비활성화와 함께 사용하면 효과적)
spring.devtools.restart.exclude=static/**,public/**,templates/**

# LiveReload 기능을 활성화합니다.
# 브라우저에 LiveReload 확장 프로그램이 설치되어 있으면, 코드 변경 시
# 자동으로 브라우저 화면을 새로고침해줍니다.
spring.devtools.livereload.enabled=true

# ==============================================================================
# Logging 설정
# ==============================================================================
# 로그 파일 출력 경로를 지정합니다. (선택 사항)

logging.level.root=warn
logging.level.org.kosa.myproject=debug
logging.level.org.springframework.web=DEBUG 
logging.level.org.springframework.jdbc.datasource.init=DEBUG
#logging.level.org.mybatis=DEBUG # MyBatis 프레임워크 관련 로그
#logging.level.java.sql=DEBUG # JDBC 드라이버 관련 SQL 로그 (쿼리 확인)
# 개발 시에는 콘솔 출력이 더 편리할 수 있지만, 파일로 저장하고 싶을 때 사용합니다.
# logging.file.name=logs/application.log

# ==============================================
# 데이터베이스 연결 설정
# ==============================================
# MySQL 8.0 연결 정보
spring.datasource.url=jdbc:mysql://localhost:3306/kosa?serverTimezone=UTC
spring.datasource.username=joyofbeing
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#스프링 부트는 애플리케이션 시작 시 데이터베이스 스키마를 자동으로 초기화하는 강력한 기능을 제공
# spring.sql.init.mode=always
# 실제 개발 및 운영 환경에서는 schema.sql과 data.sql의 자동 실행 방식을 다르게 관리
spring.sql.init.mode=never
# ==============================================================================
#  유용한 설정 (Other Useful Properties)
# ==============================================================================

# Spring MVC 정적 리소스 캐싱을 비활성화합니다. (개발 시)
# HTML, CSS, JS 파일 변경 시 즉시 반영되도록 합니다.
# 운영 환경에서는 성능을 위해 활성화하는 것이 좋습니다.
spring.web.resources.cache.cachecontrol.no-cache=true
spring.web.resources.cache.cachecontrol.no-store=true
spring.web.resources.cache.cachecontrol.must-revalidate=true
spring.web.resources.cache.cachecontrol.max-age=0

# 파일 업로드 관련 최대 크기 설정 (선택 사항)
# 대용량 파일 업로드를 처리해야 할 경우 필요합니다.
# spring.servlet.multipart.max-file-size=10MB
# spring.servlet.multipart.max-request-size=100MB

# ==============================================================================
# 설정 파일 끝
# ==============================================================================

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
    Post-Redirect-Get 패턴 학습용 NewsMapper XML
    org/kosa/myproject/mapper/NewsMapper.xml
    
    경로: src/main/resources/mapper/NewsMapper.xml
-->
<mapper namespace="org.kosa.myproject.mapper.NewsMapper">

    <!-- 
        결과 매핑 정의: 데이터베이스 컬럼과 Java 객체 필드 매핑
        MyBatis가 자동으로 카멜케이스 변환을 해주지만 명시적으로 정의
    -->
    <resultMap id="newsResultMap" type="org.kosa.myproject.domain.News">
        <id property="newsId" column="news_id" />
        <result property="newsTitle" column="news_title" />
        <result property="newsContent" column="news_content" />
        <result property="createdAt" column="created_at" />
    </resultMap>

    <!-- 
        1. 전체 뉴스 개수 조회
        용도: 페이징 처리나 통계 정보 표시용
        반환: int (총 뉴스 개수)
    -->
    <select id="selectNewsCount" resultType="int">
        SELECT COUNT(*) 
        FROM news
    </select>

    <!-- 
        2. 전체 뉴스 목록 조회 (최신순)
        용도: 뉴스 목록 페이지 표시용
        반환: List<News> (최신 등록순으로 정렬된 뉴스 목록)
    -->
    <select id="selectNewsList" resultMap="newsResultMap">
        SELECT 
            news_id,
            news_title,
            news_content,
            created_at
        FROM news 
        ORDER BY created_at DESC
    </select>

    <!-- 
        3. 뉴스 등록
        용도: Post-Redirect-Get 패턴에서 POST 요청 처리용
        매개변수: News 객체 (newsTitle, newsContent)
        반환: int (등록된 행 수, 성공시 1)
        
        주요 특징:
        - useGeneratedKeys="true": AUTO_INCREMENT된 키 값을 자동으로 받아옴
        - keyProperty="newsId": 생성된 키를 News 객체의 newsId에 설정
        - created_at는 DEFAULT CURRENT_TIMESTAMP로 자동 설정
    -->
    <insert id="insertNews" 
            parameterType="org.kosa.myproject.domain.News"
            useGeneratedKeys="true" 
            keyProperty="newsId">
        INSERT INTO news (
            news_title,
            news_content
        ) VALUES (
            #{newsTitle},
            #{newsContent}
        )
    </insert>

    <!-- 
        4. 뉴스 ID로 단일 뉴스 조회 (향후 확장용)
        용도: 뉴스 상세보기 페이지용
        매개변수: Long newsId
        반환: News 객체
    -->
    <select id="selectNewsById" resultMap="newsResultMap">
        SELECT 
            news_id,
            news_title,
            news_content,
            created_at
        FROM news 
        WHERE news_id = #{newsId}
    </select>

</mapper>

<!--
    === MyBatis 매퍼 XML 핵심 개념 정리 ===
    
    1. namespace: 매퍼 인터페이스와 1:1 대응
       - 패키지명.클래스명과 정확히 일치해야 함
    
    2. resultMap vs resultType:
       - resultMap: 복잡한 객체 매핑, 컬럼명과 필드명이 다를 때
       - resultType: 간단한 타입이나 자동 매핑 가능한 경우
    
    3. parameterType: 
       - 매개변수 타입 명시 (생략 가능, MyBatis가 자동 추론)
    
    4. useGeneratedKeys + keyProperty:
       - AUTO_INCREMENT된 기본키 값을 객체에 자동 설정
       - Post-Redirect-Get 패턴에서 등록 후 새로운 ID 활용 가능
    
    5. #{} vs ${}:
       - #{}: PreparedStatement 방식, SQL 인젝션 방지 (권장)
       - ${}: Statement 방식, 동적 테이블명/컬럼명 등 특수한 경우만 사용
    
    === 실무 활용 포인트 ===
    - 복잡한 JOIN 쿼리는 resultMap으로 매핑
    - 페이징 처리시 COUNT 쿼리와 LIST 쿼리 분리
    - 동적 쿼리는 <if>, <choose>, <foreach> 등 활용
    - 성능 최적화를 위해 필요한 컬럼만 SELECT
-->
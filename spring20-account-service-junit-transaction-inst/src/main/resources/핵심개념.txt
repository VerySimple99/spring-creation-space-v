**PRG(Post-Redirect-Get) 패턴**          
PRG(Post-Redirect-Get) 패턴은 웹 개발에서 중복 제출(duplicate submission)을 방지하기 위한 디자인 패턴이에요. 사용자가 폼 데이터를 제출(POST)한 후, 서버가 즉시 다른 페이지로 리다이렉트(Redirect)하고, 브라우저가 다시 GET 요청을 보내는 방식으로 동작하죠.          
          
 이 패턴은 세 단계로 이루어집니다.
Post: 사용자가 웹 폼(예: 회원가입, 결제)을 통해 데이터를 POST 방식으로 서버에 제출합니다.
Redirect: 서버는 데이터를 처리한 후, 사용자에게 성공 페이지나 다른 페이지로 이동하라는 HTTP 302 Redirect 응답을 보냅니다.
Get: 브라우저는 서버로부터 받은 Redirect 응답에 따라 새로운 URL로 GET 요청을 보냅니다.
          

**TDD, JUnit , Given When Then**          
 TDD (Test-Driven Development)  : 개발 방법론 중 하나로, 코드를 작성하기 전에 먼저 테스트 코드를 작성하는 방식
    
JUnit
JUnit은 Java 언어를 위한 테스팅 프레임워크입니다. 개발자가 TDD를 실천할 수 있도록 필요한 도구와 환경을 제공하는 역할을 해요.


Given-When-Then 패턴 
Given-When-Then은 하나의 테스트 시나리오를 작성하는 구조 또는 패턴입니다. 테스트의 의도를 명확하고 직관적으로 표현하여 가독성을 높이는 것이 목적이에요.

Given: 테스트를 위한 초기 상태를 설정합니다. (예: "잔액이 10,000원인 계좌가 있다.")
When: 테스트하고자 하는 행동을 정의합니다. (예: "5,000원을 출금한다.")
Then: 그 행동의 예상 결과를 검증합니다. (예: "계좌의 잔액이 5,000원이 되어야 한다.")

세 가지 개념의 관계 🧩
TDD라는 방법론을 따라 개발할 때,
JUnit이라는 도구를 사용하여 테스트 코드를 작성하며,
그 테스트 코드를 Given-When-Then이라는 구조에 맞춰 작성하는 것이 일반적인 흐름입니다.


스프링에서 트랜잭션을 적용 애너테이션   
트랜잭션 처리의 핵심적인 목적은 데이터베이스 작업의 안정성과 신뢰성을 보장하는 것입니다.이는 주로 ACID라고 불리는 네 가지 속성을 만족시킴으로써 달성됩니다      
@Transactional : 데이터베이스에 데이터를 저장, 수정, 삭제하는 DML(INSERT, UPDATE, DELETE) 작업을 수행할 때 사용됩니다.
@Transactional(readOnly = true) : 오직 읽기(Read Only)만 가능한 트랜잭션이 생성
트랜잭션이 읽기 전용으로 설정되므로, 불필요한 쓰기 관련 오버헤드(Overhead)가 제거되어 성능이 최적화 됨 ,데이터베이스에 쓰기 락을 걸지 않으므로, 동시성 처리에 유리
          